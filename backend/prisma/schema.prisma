// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init


generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id         String      @id @default(uuid())
  username   String   @unique
  email      String   @unique
  password   String
  firstName  String
  lastName   String

  chatrooms  Chatroom[]
  UserChatroom UserChatroom[]
}

model Chatroom {
  id          String   @id @default(uuid())
  name        String
  creatorId   String
  isActive    Boolean  @default(true)
  createdAt   DateTime @default(now())
  discardedAt DateTime?

  user        User     @relation(fields: [creatorId], references: [id])
  UserChatroom UserChatroom[]
}

model UserChatroom{
  id          String   @id @default(uuid())
  userId      String
  chatroomId  String
  isActive    Boolean  @default(true)
  createdAt   DateTime @default(now())
  discardedAt DateTime?
  user        User     @relation(fields: [userId], references: [id])
  chatroom    Chatroom @relation(fields: [chatroomId], references: [id])

}

model message {
  id      String   @id @default(uuid())
  chatroomId String
  content Json /// Each element: { user_id: String, message: String }
}